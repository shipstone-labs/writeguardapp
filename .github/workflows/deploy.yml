name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: compile-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: |
          curl https://mise.run | sh
          mise install
          mise x -- corepack enable

      - name: Install dependencies
        run: mise x -- pnpm i

      - name: Build
        run: mise x -- pnpm build
        env:
          NEXT_PUBLIC_ONCHAINKIT_API_KEY: ${{ secrets.NEXT_PUBLIC_ONCHAINKIT_API_KEY }}
          NEXT_PUBLIC_WC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WC_PROJECT_ID }}
          NEXT_PUBLIC_CHAIN_ID: 8453
          NEXT_PUBLIC_CHAIN_NAME: Base
          NEXT_PUBLIC_RPC_URL: https://mainnet.base.org

      - name: ðŸš€ Deploy release
        if: ${{ steps.extract_branch.outputs.branch == '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          mise x -- pnpm dlx wrangler pages deploy --project-name "${CF_PROJECT_NAME}" out --branch "main"

      - name: ðŸš€ Deploy ${{ steps.extract_branch.outputs.branch }} (PR)
        if: ${{ steps.extract_branch.outputs.branch != '' }}
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          mise x -- pnpm dlx wrangler pages deploy --project-name "${CF_PROJECT_NAME}" out --branch "${{ steps.extract_branch.outputs.branch }}" | tee output.log
          sed < output.log -n 's#.*Take a peek over at \(.*\)$#specific_url=\1#p' >> $GITHUB_OUTPUT
        id: deploy

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ github.event.number != '' }}
        with:
          message: |
            ### Deployed with **Cloudflare Pages** :cloud: :rocket: :ok:
            - **URL**: [${{ steps.extract_branch.outputs.url }}](${{ steps.extract_branch.outputs.url }})
            - **Specific**: [${{ steps.deploy.outputs.specific_url }}](${{ steps.deploy.outputs.specific_url }})
